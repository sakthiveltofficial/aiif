/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useCurrentSheet } from '@theatre/r3f';

export function StartupRocket(props) {
  const { nodes, materials } = useGLTF('/models/NewModels/compressed_startuprocket.glb')
  const groupRef = useRef()

  const sheet = useCurrentSheet();
  const [currentDuration, setCurrentDuration] = useState(0);

  useFrame(() => {
    if (sheet) {
      setCurrentDuration(sheet.sequence.position);
    }
    if (groupRef.current) {
      groupRef.current.rotation.y += 0.01 // Rotate around Y axis
    }
  })

  // Only render if currentDuration is greater than or equal to 38.01
  if (currentDuration > 38.01) return null;

  return (
    <group ref={groupRef} {...props} dispose={null} position={[-0.100, 1.076, -65.157]} rotation={[0.111, 0, 0.573]} scale={0.5112}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.defaultMaterial.geometry}
        material={materials.Fire} 
        position={[-0.144, -0.574, -0.007]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.defaultMaterial001.geometry}
        material={materials.Blue_Plastic}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.defaultMaterial002.geometry}
        material={materials.DarkGrey_Plastic}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.defaultMaterial003.geometry}
        material={materials.Chrome}
        position={[0.444, 0.324, -0.001]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.defaultMaterial004.geometry}
        material={materials.Red_Plastic}
        position={[0.521, 0.445, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.defaultMaterial005.geometry}
        material={materials.White_Plastic}
        position={[0.329, 0.142, -0.004]}
      />
      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.defaultMaterial006.geometry}
        material={materials.Stand_Brass}
      /> */}
    </group>
  )
}

useGLTF.preload('/models/NewModels/compressed_startuprocket.glb')


